/*
Some boilerplate
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package applyconfiguration

import (
	v1alpha1 "github.com/venezia/k8s-gorilla-session-store/k8s/api/session/v1alpha1"
	sessionv1alpha1 "github.com/venezia/k8s-gorilla-session-store/k8s/client/applyconfiguration/session/v1alpha1"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
)

// ForKind returns an apply configuration type for the given GroupVersionKind, or nil if no
// apply configuration type exists for the given GroupVersionKind.
func ForKind(kind schema.GroupVersionKind) interface{} {
	switch kind {
	// Group=gorilla.michaelvenezia.com, Version=v1alpha1
	case v1alpha1.SchemeGroupVersion.WithKind("Session"):
		return &sessionv1alpha1.SessionApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("SessionSpec"):
		return &sessionv1alpha1.SessionSpecApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("SessionStatus"):
		return &sessionv1alpha1.SessionStatusApplyConfiguration{}

	}
	return nil
}
